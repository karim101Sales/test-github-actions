[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "test-github-actions",
    "section": "",
    "text": "some edite after editting the publish action to master instead of main and with no re-render on my side\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "data/writings/index.html",
    "href": "data/writings/index.html",
    "title": "Quarto Blog",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nQuarto 1.4\n\n\nQuarto 1.4 is released\n\n\n\nQuarto 1.4\n\n\nReleases\n\n\n\nQuarto 1.4 brings new formats for dashboards and Typst, a new manuscript project type, a cross-reference overhaul, Shiny for Python support, and a ton of other updates. \n\n\n\n\n\nJan 24, 2024\n\n\nCharlotte Wickham\n\n\n\n\n\n\n\n\n\n\n\n\nQuarto Dashboards Demonstration\n\n\nA brief tour of how to build a dashboard in Quarto v1.4.\n\n\n\nDemo\n\n\nQuarto 1.4\n\n\n\n\n\n\n\n\n\nDec 7, 2023\n\n\nAndrew Holz\n\n\n\n\n\n\n\n\n\n\n\n\nASA Traveling Courses on Quarto\n\n\nFrom R Markdown to Quarto\n\n\n\nLearn\n\n\n\nSeries of workshops for learning Quarto with R and RStudio, aimed primarily at R Markdown users. \n\n\n\n\n\nDec 5, 2023\n\n\nMine Çetinkaya-Rundel\n\n\n\n\n\n\n\n\n\n\n\n\nQuarto for Academics\n\n\nA potpourri of Quarto features useful for academics\n\n\n\nLearn\n\n\n\nA video highlighting some of Quarto’s features that are especially useful for academics, as educators and as researchers. \n\n\n\n\n\nMay 22, 2023\n\n\nMine Çetinkaya-Rundel\n\n\n\n\n\n\n\n\n\n\n\n\nGet Started with Quarto\n\n\nA video to jumpstart your Quarto journey\n\n\n\nLearn\n\n\n\nA new video for getting started with Quarto using R and RStudio. \n\n\n\n\n\nMay 15, 2023\n\n\nMine Çetinkaya-Rundel\n\n\n\n\n\n\n\n\n\n\n\n\nQuarto 1.3\n\n\nQuarto 1.3 is officially released\n\n\n\nQuarto 1.3\n\n\nReleases\n\n\n\nQuarto 1.3 brings new features, improvements, and fixes. \n\n\n\n\n\nApr 26, 2023\n\n\nCharlotte Wickham\n\n\n\n\n\n\n\n\n\n\n\n\nConfluence Publishing\n\n\nPublish from Quarto to Confluence\n\n\n\nFeatures\n\n\nAuthoring\n\n\nQuarto 1.3\n\n\n\nQuarto 1.3 adds support for publishing individual documents, and projects containing many documents to Atlassian Confluence. \n\n\n\n\n\nMar 20, 2023\n\n\nCharlotte Wickham\n\n\n\n\n\n\n\n\n\n\n\n\nJupyter Notebook Cell Embedding\n\n\nEmbed output from an external Jupyter Notebook in a Quarto document\n\n\n\nFeatures\n\n\nAuthoring\n\n\nQuarto 1.3\n\n\n\nQuarto 1.3 adds support for embedding cells from a Jupyter Notebook into a Quarto document via an embed shortcode. In HTML documents, links are automatically added that point to a rendered version of the external notebook. \n\n\n\n\n\nMar 17, 2023\n\n\nCharlotte Wickham\n\n\n\n\n\n\n\n\n\n\n\n\nMulti-format Publishing\n\n\nAutomatically link to other formats in HTML documents\n\n\n\nFeatures\n\n\nAuthoring\n\n\nQuarto 1.3\n\n\n\nIn Quarto 1.3, additional formats listed in HTML documents will automatically be linked in an “Other Formats” section near the top of the page. \n\n\n\n\n\nMar 15, 2023\n\n\nCharlotte Wickham\n\n\n\n\n\n\n\n\n\n\n\n\nCode Annotation\n\n\nAdd line based annotations to your code chunks\n\n\n\nFeatures\n\n\nAuthoring\n\n\nQuarto 1.3\n\n\n\nIn Quarto 1.3, you can add line based annotations to code chunks to highlight or explain parts of your code mtk. \n\n\n\n\n\nMar 13, 2023\n\n\nCharlotte Wickham\n\n\n\n\n\n\n\n\n\n\n\n\nShinylive Extension\n\n\nEmbed Shinylive applications in Quarto documents\n\n\n\nExtensions\n\n\nFeatures\n\n\n\nWith Shinylive, you can embed Shiny for Python applications into Quarto documents and run the entire application (including the Python runtime) inside the user’s web browser. \n\n\n\n\n\nOct 25, 2022\n\n\nWinston Chang\n\n\n\n\n\n\n\n\n\n\n\n\nQuarto Extensions\n\n\nExtend Quarto with new capabilities\n\n\n\nExtensions\n\n\nFeatures\n\n\n\nQuarto Extensions are a powerful way to modify or extend the behavior of Quarto, and can be created and distributed by anyone. Extension types include filters, shortcodes, and custom formats. \n\n\n\n\n\nJul 25, 2022\n\n\nJ.J. Allaire\n\n\n\n\n\n\n\n\n\n\n\n\nQuarto at rstudio::conf(2022)\n\n\nQuarto-related workshops and talks at rstudio::conf(2022)\n\n\n\nConf\n\n\nWorkshop\n\n\nTalk\n\n\n\nrstudio::conf(2022) will feature a variety of workshops and talks on Quarto. Join us in Washington DC this July 25-28 to learn more about Quarto and hear from folks using Quarto to create, share, and collaborate. \n\n\n\n\n\nJun 21, 2022\n\n\nMine Çetinkaya-Rundel\n\n\n\n\n\n\n\n\n\n\n\n\nPositioning Content in the Margin\n\n\nCreate ‘Tufte’ style documents with sidenotes, margin tables and figures, and other margin content\n\n\n\nFeatures\n\n\nLayout\n\n\n\nThis post demonstrates a few of the capabilities for positioning content in the margin of the page. You can read more about the complete capabilities in the the Article Layout Guide. \n\n\n\n\n\nFeb 17, 2022\n\n\nCharles Teague\n\n\n\n\n\n\n\n\n\n\n\n\nCustomizing Table Output\n\n\nAuthor and customize markdown tables using Quarto\n\n\n\nFeatures\n\n\nAuthoring\n\n\nTables\n\n\n\nThis post provides an overview of these capabilities in Quarto. For more detail about all the features Quarto for authoring tables, see Tables. \n\n\n\n\n\nFeb 15, 2022\n\n\nJJ Allaire\n\n\n\n\n\n\n\n\n\n\n\n\nUsing Callouts\n\n\nUse callouts to draw attention to important complementary content without interupting the document flow\n\n\n\nFeatures\n\n\nAuthoring\n\n\n\nCallouts are an excellent way to draw extra attention to certain concepts, or to more clearly indicate that certain content is supplemental or applicable to only some scenarios mtk. \n\n\n\n\n\nFeb 13, 2022\n\n\nCharles Teague\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "data/writings/posts/2023-05-22-quarto-for-academics/index.html",
    "href": "data/writings/posts/2023-05-22-quarto-for-academics/index.html",
    "title": "Quarto for Academics",
    "section": "",
    "text": "Quarto offers a myriad of features that are especially useful for academics, as educators and as researchers. These range from chunk options that enable automatic linking of code to documentation, to article templates for manuscript submission to multiple journals. The following video walks you through some of these features.\n\nSelect highlights include:\n\nLinking to documentation from code with code-link.\nInformative YAML errors and YAML completion.\nCreating Quarto slides with revealjs.\nPDF export of HTML slides.\nAnnotating slides with chalkboard.\nAdvancing slides for your audience with multiplex.\nHighlighting code with code-line-numbers.\nCustomizing output location with output-location.\nShowing code chunk fences with echo: fenced.\nCode annotation.\nAuthoring manuscripts with Quarto journal templates.\nInserting citations from Zotero or from a DOI with the RStudio Visual Editor.\n\nIf you would like to follow along as you watch, you can find the source code for everything created in the video in this GitHub repository."
  },
  {
    "objectID": "data/writings/posts/2023-03-17-jupyter-cell-embedding/penguins.html",
    "href": "data/writings/posts/2023-03-17-jupyter-cell-embedding/penguins.html",
    "title": "Palmer Penguins",
    "section": "",
    "text": "import pandas as pd\nimport altair as alt\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\n\nData from Palmer Penguins R package\n\npenguins = pd.read_csv(\"https://pos.it/palmer-penguins-github-csv\")\n\n\npenguins.groupby(\"species\").size().reset_index(name = \"count\")\n\n\n\n\n\n\n\n\n\nspecies\ncount\n\n\n\n\n0\nAdelie\n152\n\n\n1\nChinstrap\n68\n\n\n2\nGentoo\n124\n\n\n\n\n\n\n\n\n\ncolors = [\"#FF8C00\", \"#A020F0\", \"#008B8B\"]\nsns.set_palette(colors, n_colors = 3)\n\n\npenguins[\"bill_ratio\"] = (\n   penguins[\"bill_length_mm\"] / penguins[\"bill_depth_mm\"] \n)\nsns.displot(penguins, \n            x = \"bill_ratio\", \n            hue = \"species\", \n            kind = \"kde\", fill = True, aspect = 2, height = 3)\nplt.show()\n\n\n\n\n\n\n\n\nsns.displot(penguins, \n            x = \"bill_depth_mm\", \n            hue = \"species\", \n            kind = \"kde\", fill = True, \n            aspect = 2, height = 3)\nplt.show()\nsns.displot(penguins, \n            x = \"bill_length_mm\", \n            hue = \"species\", \n            kind = \"kde\", fill = True, \n            aspect = 2, height = 3)\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n(a) Gentoo penguins tend to have thinner bills,\n\n\n\n\n\n\n\n\n\n\n\n(b) and Adelie penguins tend to have shorter bills.\n\n\n\n\n\n\n\nFigure 1: Marginal distributions of bill dimensions\n\n\n\n\nscale = alt.Scale(domain = ['Adelie', 'Chinstrap', 'Gentoo'],\n                  range = colors)\n\n\nalt.Chart(penguins).mark_circle(size=60).encode(\n    alt.X('bill_length_mm',\n        scale=alt.Scale(zero=False)\n    ),\n    alt.Y('bill_depth_mm',\n        scale=alt.Scale(zero=False)\n    ),\n    color = alt.Color('species', scale = scale),\n    tooltip=['species', 'sex', 'island']\n)\n\n\n\n\n\n\n\n\nFigure 2: A scatterplot of bill dimensions for penguins, made with Altair."
  },
  {
    "objectID": "data/writings/posts/2022-02-15-feature-tables/index.html",
    "href": "data/writings/posts/2022-02-15-feature-tables/index.html",
    "title": "Customizing Table Output",
    "section": "",
    "text": "Quarto includes a number of features aimed at making it easy to to author and customize markdown table output, including:\nThis post provides an overview of these capabilities in Quarto. For more detail about all the features Quarto for authoring tables, see Tables."
  },
  {
    "objectID": "data/writings/posts/2022-02-15-feature-tables/index.html#markdown-tables",
    "href": "data/writings/posts/2022-02-15-feature-tables/index.html#markdown-tables",
    "title": "Customizing Table Output",
    "section": "Markdown Tables",
    "text": "Markdown Tables\nThe most commonly used markdown table is known as a pipe table. Pipe tables support specifying per column alignment as well as captions. For example:\n| Default | Left | Right | Center |\n|---------|:-----|------:|:------:|\n| 12      | 12   |    12 |   12   |\n| 123     | 123  |   123 |  123   |\n| 1       | 1    |     1 |   1    |\n\n: Demonstration of pipe table sytnax\nHere is the table rendered to HTML:\n\nDemonstration of pipe table syntax\n\n\nDefault\nLeft\nRight\nCenter\n\n\n\n\n12\n12\n12\n12\n\n\n123\n123\n123\n123\n\n\n1\n1\n1\n1\n\n\n\n\nCaption Location\nBy default, table captions are positioned above tables. You can modify this behavior using the tbl-cap-location option. For example:\n---\ntbl-cap-location: top\n---"
  },
  {
    "objectID": "data/writings/posts/2022-02-15-feature-tables/index.html#explicit-column-widths",
    "href": "data/writings/posts/2022-02-15-feature-tables/index.html#explicit-column-widths",
    "title": "Customizing Table Output",
    "section": "Explicit Column Widths",
    "text": "Explicit Column Widths\nBeyond standard pipe table syntax for expressing column width, you can also explicitly specify columns widths using the tbl-colwidths attribute or document-level option. For an individual markdown table, add the attribute after the caption. For example:\n| fruit  | price  |\n|--------|--------:\n| apple  | 2.05   |\n| pear   | 1.37   |\n| orange | 3.09   |\n\n: Fruit prices {tbl-colwidths=\"[75,25]\"}\nNote that this option is specified at the top level so that it can be shared by both PDF and HTML formats. If you are only targeting a single format you can place it alongside other format specific options.\nValid values for the caption location include:\n\n\n\nValue\nDescription\n\n\n\n\ntop\nPosition the caption above the table.\n\n\nbottom\nPosition the caption below the table.\n\n\nmargin\nPosition the caption in the margin."
  },
  {
    "objectID": "data/writings/posts/2022-02-15-feature-tables/index.html#computations",
    "href": "data/writings/posts/2022-02-15-feature-tables/index.html#computations",
    "title": "Customizing Table Output",
    "section": "Computations",
    "text": "Computations\nAll of the options described above work for tables produced by executable code cells. For example, here we apply the tbl-cap, tbl-colwidths and tbl-caption-location options to a code cell:\n```{r}\n#| tbl-cap: \"Cars\"\n#| tbl-colwidths: [60,40]\n#| tbl-cap-location: margin\n\nlibrary(knitr)\nkable(head(cars))\n```\nIn addition to the above, which focused on some of the features of Quarto when writing pipe tables in markdown, you can also author tables using grid syntax. You review the documentation. for more detail."
  },
  {
    "objectID": "data/writings/posts/2022-06-21-rstudio-conf-2022-quarto/index.html",
    "href": "data/writings/posts/2022-06-21-rstudio-conf-2022-quarto/index.html",
    "title": "Quarto at rstudio::conf(2022)",
    "section": "",
    "text": "rstudio::conf(2022) will feature a variety of workshops and talks on Quarto. Join us in Washington DC this July 25-28 to learn more about Quarto and hear from folks using Quarto to create, share, and collaborate.\nHere is a list of Quarto-related talks and workshops (and scroll down for details on each):"
  },
  {
    "objectID": "data/writings/posts/2022-06-21-rstudio-conf-2022-quarto/index.html#keynote",
    "href": "data/writings/posts/2022-06-21-rstudio-conf-2022-quarto/index.html#keynote",
    "title": "Quarto at rstudio::conf(2022)",
    "section": "Keynote",
    "text": "Keynote\nReimagine + Collaborate + Share with Quarto (Keynote): (Talk recording)\n\nPresented by Julia Stewart Lowndes (Director, Openscapes) and Mine Çetinkaya-Rundel (Developer Educator at RStudio and Professor at Duke University).\nThursday July 28, 9:00am - 10:00am EDT.\nWhat is Quarto? In this talk, in four acts, we will discuss how Quarto unifies and extends the R Markdown ecosystem. Through our work with NASA Openscapes, Duke University, and RStudio, we will share our experiences authoring, teaching, and collaborating with Quarto. Full of demos with Quarto in RStudio and Jupyter and weaving together narrative, R, and Python code, we will showcase features of Quarto that have enabled us to reimagine our reproducible workflows. This talk will help you get the most out of Quarto regardless of your background with R Markdown, the computing language(s) you use, and your tool of choice for authoring."
  },
  {
    "objectID": "data/writings/posts/2022-06-21-rstudio-conf-2022-quarto/index.html#workshops",
    "href": "data/writings/posts/2022-06-21-rstudio-conf-2022-quarto/index.html#workshops",
    "title": "Quarto at rstudio::conf(2022)",
    "section": "Workshops",
    "text": "Workshops\nWe will have two Quarto workshops at the conference, held on July 25-26, one for those who have no or little prior experience with R Markdown and the other for those who want to take their R Markdown skills and expertise and apply them in Quarto.\n\nGetting Started with Quarto: This workshop is designed for those who have no or little prior experience with R Markdown. In this 2 day workshop you will learn about the Quarto format for technical communication and computation. The workshop will teach you how to get started creating and fully customizing Quarto outputs (HTML, PDF, Presentations) and the use of RStudio’s Visual Editor which provides a user interface for editing all of Pandoc markdown. The workshop will also provide an overview of Quarto’s developer tooling support in alternative tools such as Jupyter, VS Code, and any text editors. The workshop will briefly cover how to add interactivity to Quarto with Shiny, Observable JS, htmlwidgets or Jupyter Widgets. Lastly, the workshop will cover Quarto Projects for aggregating many files such as complex web sites or entire books. Presented by Tom Mock, Customer Enablement Lead at RStudio, this workshop will be appropriate for attendees who answer yes to these questions:\n\nHave you programmed in R and want to better encapsulate your code, documentation, and outputs in a cohesive “data product”?\nDo you want to learn about the next generation of RMarkdown for data science?\nDo you want to have a better interactive experience when writing technical or scientific documents with literate programming?\n\nFind out more about this workshop and register at https://www.rstudio.com/conference/2022/workshops/get-started-quarto/.\nFrom R Markdown to Quarto: This workshop is designed for those who want to take their R Markdown skills and expertise and apply them in Quarto. In this workshop you will learn how to apply your reproducible authoring skills to the Quarto format and learn about new tools and workflows for authoring with Quarto in RStudio. You will learn to create static documents, to add interactivity to them with Shiny and htmlwidgets, and to create presentations in various formats such as reveal.js, beamer, and pptx. The workshop will also introduce you to Quarto projects which you can use to build websites and write blogs and books. Finally, you will learn various ways to deploy and publish your Quarto projects on the web. Independent modules will also highlight authoring in Quarto with Jupyter and VS Code as well as other text editors. Presented by Andrew Bray, Associate Teaching Professor in the Department of Statistics at UC Berkeley, this workshop will be appropriate for you if you answer yes to any of these questions:\n\nHave you authored R Markdown documents and are you interested in migrating your workflow to its successor format, Quarto?\nAre you interested in exploring the wide spectrum of documents that can be produced with Quarto, including static documents, websites, and slides?\n\nFind out more about this workshop and register at https://www.rstudio.com/conference/2022/workshops/rmd-to-quarto."
  },
  {
    "objectID": "data/writings/posts/2022-06-21-rstudio-conf-2022-quarto/index.html#talks",
    "href": "data/writings/posts/2022-06-21-rstudio-conf-2022-quarto/index.html#talks",
    "title": "Quarto at rstudio::conf(2022)",
    "section": "Talks",
    "text": "Talks\n\nQuarto for R Markdown users: (Talk recording)\n\nPresented by Tom Mock, Customer Enablement Lead at RStudio.\nWednesday July 27, 3:20pm - 3:40pm EDT.\nAre you curious about Quarto? Maybe you saw it on Twitter or the RStudio::conf agenda. Perhaps this raised questions like: What exactly is Quarto? What about RMarkdown? (don’t worry it’s not going away!) What features does Quarto add? What should I do with my existing Rmd/ipynb files? This talk will answer all of those questions and more! I’ll present Quarto as a next-gen version of RMarkdown, compare the similarities, and then discuss the new features in Quarto for publishing documents, presentations, blog posts, lab notebooks and more! Lastly, I’ll cover what this means for our customers using RStudio Team, and the exciting new world for Python users.\n\nThese are a few of my favorite things (about Quarto presentations): (Talk recording)\n\nPresented by Tracy Teal, Open Source Program Director at RStudio.\nThursday July 28, 2022 3:20pm - 3:40pm EDT.\nQuarto is the next generation of RMarkdown, and comes with a new presentation format, revealjs. In this talk, I’ll show a few of my favorite things about making interactive HTML presentations with Quarto. Along the way you’ll learn about the visual editor, multiple columns, delivering an effective talk with speaker notes and mode, making your presentations pop with transitions, effective ways to incorporate code into your presentation, beautiful themes (and how to match your corporate style guide), and sharing it as pdf and HTML. I’ll finish off with a brief look at generating a PowerPoint presentation from a template.\n\nLiterate Programming With Jupyter Notebooks and Quarto: (Talk recording)\n\nPresented by Hamel Husain, head of Data Science at Outerbounds (the developers of Metaflow) and core developer at fast.ai.\nThursday July 28, 3:40pm - 4:00pm EDT.\nJupyter Notebooks play a critical role in in the workflow of many users. Notebooks are used to document existing code, to quickly prototype and iterate on ideas, and as a medium of technical communication. However, package developers typically use an entirely separate set of more traditional development tools, and the context switching between these tools and notebooks can be frustrating. Not only do you lose the ability to iterate fast, but you lose the ability to document and test your code in-situ, requiring you to create documentation and tests separately from source code. Nbdev is a literate programming framework that allows you to develop Python libraries within Jupyter Notebooks. This talk will describe the integration between Nbdev and Quarto, which enables library developers to author their documentation right alongside their code, and automatically produce a Quarto website for their package. The result is a seamless workflow for developing, documenting, and testing software packages all within Jupyter Notebooks, with no context-switching required.\n\nWebsites & Books & Blogs, oh my! Creating Rich Content with Quarto: (Talk recording)\n\nPresented by Devin Pastoor, Solutions Engineer at RStudio.\nThursday July 28, 4:00pm - 4:20pm EDT.\nA number of packages have emerged in the R ecosystem to help create websites (hugodown), books (bookdown), and blogs (blogdown). In this talk, I’ll show you how Quarto handles creating these types of content and more. Whether you’re a grad student considering your first blog post about R, or a python expert about to write a technical book, I’ll show you how Quarto enables you to focus on content while it takes care of the rest. In addition, I’ll show the RStudio team is making it as easy as possible to publish and share content within your organization and to the whole community.\n\n\nTo find out more about the conference and register, visit rstd.io/conf. Looking forward to seeing you in DC!\nCan’t make it to the conference in person, but don’t want to miss this content? You can follow along with the talks remotely via the live stream and we will share materials from the workshops in a post-conf roundup post."
  },
  {
    "objectID": "data/writings/posts/2023-03-15-multi-format/index.html",
    "href": "data/writings/posts/2023-03-15-multi-format/index.html",
    "title": "Multi-format Publishing",
    "section": "",
    "text": "Quarto 1.3 Feature\n\n\n\nThis post is part of a series highlighting new features in the 1.3 release of Quarto. Get the latest release at https://quarto.org/docs/download.\nStarting in Quarto 1.3, HTML pages (either standalone or in a website) can automatically include links to other formats specified in the document front matter. For example, the following document front matter:\nResults in an HTML page that includes a link to the additional notebook format in the right margin below the table of contents:\nIf a table of contents is enabled for the page, the additional formats will be automatically placed within the table of contents as a new section. If no table of contents is displayed, the additional formats will be displayed in the right margin at the top of the document.\nLinks to additional formats are displayed by default, but you can control whether they are shown or even which specific formats are included with the format-links YAML option.\nRead more about this feature on the Multi-format page of the pre-release highlights.\nhamo the end @texbook"
  },
  {
    "objectID": "data/writings/posts/2023-03-15-multi-format/index.html#sec-plot",
    "href": "data/writings/posts/2023-03-15-multi-format/index.html#sec-plot",
    "title": "Multi-format Publishing",
    "section": "Plot",
    "text": "Plot\n\nimport matplotlib.pyplot as plt\nplt.plot([1,23,2,4])\nplt.show()\n\n\n\n\n\n\n\nFigure 1: Simple Plot"
  },
  {
    "objectID": "data/writings/posts/2023-03-15-multi-format/index.html#sec-equation",
    "href": "data/writings/posts/2023-03-15-multi-format/index.html#sec-equation",
    "title": "Multi-format Publishing",
    "section": "Equation",
    "text": "Equation\n\\[\ns = \\sqrt{\\frac{1}{N-1} \\sum_{i=1}^N (x_i - \\overline{x})^2}\n\\tag{1}\\]"
  },
  {
    "objectID": "data/writings/posts/2023-03-15-multi-format/index.html#references",
    "href": "data/writings/posts/2023-03-15-multi-format/index.html#references",
    "title": "Multi-format Publishing",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "data/writings/posts/2023-03-13-code-annotation/index.html",
    "href": "data/writings/posts/2023-03-13-code-annotation/index.html",
    "title": "Code Annotation",
    "section": "",
    "text": "Quarto 1.3 Feature\n\n\n\nThis post is part of a series highlighting new features in the 1.3 release of Quarto. Get the latest release at https://quarto.org/docs/download.\n\n\nCode blocks and executable code cells in Quarto may now include line-based annotations. Line-based annotations provide a way to attach explanation to lines of code much like footnotes.\nFor example, this code uses annotation to describe the steps in an R dplyr pipeline in plain language:\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n1penguins |&gt;\n2  mutate(\n    bill_ratio = bill_depth_mm / bill_length_mm,\n    bill_area  = bill_depth_mm * bill_length_mm\n  )\n\n1\n\nTake penguins, and then,\n\n2\n\nadd new columns for the bill ratio and bill area.\n\n\nThe default HTML annotation style displays annotations in a list below the code block. Clicking on the annotation number in the list highlights the relevant lines in the code. Other HTML styles hide the annotations, revealing them in a tooltip when a user hovers or selects a marker.\nThe PDF format also allows for annotations, numbering, and displaying the annotation text below the code. In other formats, like Word and GitHub Markdown, annotations are instead labeled with the line of code (or lines of code) to which the annotation text applies.\n\nPDFGitHub Flavored Markdown\n\n\n\n\n\n``` r\nlibrary(tidyverse)\nlibrary(palmerpenguins)\npenguins |&gt;\n  mutate(\n    bill_ratio = bill_depth_mm / bill_length_mm,\n    bill_area  = bill_depth_mm * bill_length_mm\n  )\n```\n\nLine 3  \nTake `penguins`, and then,\n\nLines 4-7  \nadd new columns for the bill ratio and bill area.\n\n\n\nTo add code annotation to a code block, you need to add two things: specially formatted code comments in your code cell, and an ordered list below the code cell with the annotation text:\n\nCode Comments: Each annotated line in the code cell should be terminated with a comment (using the code cell’s language comment character) followed by a space and then an annotation number enclosed in angle brackets (e.g. # &lt;2&gt;). You may repeat an annotation number if the annotation spans multiple lines.\nOrdered List: An ordered list should appear immediately after the code cell, and include the contents of each annotation. Each numbered item in the ordered list will correspond to the line(s) of code with the same annotation number.\n\nFor example, the annotations above were produced by including the following in the Quarto document:\n```r\nlibrary(tidyverse)\nlibrary(palmerpenguins)\npenguins |&gt;                                      # &lt;1&gt;\n  mutate(                                        # &lt;2&gt;\n    bill_ratio = bill_depth_mm / bill_length_mm, # &lt;2&gt;\n    bill_area  = bill_depth_mm * bill_length_mm  # &lt;2&gt;\n  )                                              # &lt;2&gt;\n```\n1. Take `penguins`, and then,\n2. add new columns for the bill ratio and bill area.\nYou can read more about how to control the annotation style, and whether annotations appear at all on the Code Annotation page of the pre-release highlights."
  },
  {
    "objectID": "data/writings/posts/2022-02-13-feature-callouts/index.html",
    "href": "data/writings/posts/2022-02-13-feature-callouts/index.html",
    "title": "Using Callouts",
    "section": "",
    "text": "Callouts are an excellent way to draw extra attention to certain concepts, or to more clearly indicate that certain content is supplemental or applicable to only some scenarios."
  },
  {
    "objectID": "data/writings/posts/2022-02-13-feature-callouts/index.html#callout-basics",
    "href": "data/writings/posts/2022-02-13-feature-callouts/index.html#callout-basics",
    "title": "Using Callouts",
    "section": "Callout Basics",
    "text": "Callout Basics\nThere are five different types of callouts available.\n\nnote\ntip\nimportant\ncaution\nwarning\n\nThe color and icon will be different depending upon the type that you select."
  },
  {
    "objectID": "data/writings/posts/2022-02-13-feature-callouts/index.html#syntax",
    "href": "data/writings/posts/2022-02-13-feature-callouts/index.html#syntax",
    "title": "Using Callouts",
    "section": "Syntax",
    "text": "Syntax\nCreate callouts in markdown using the following syntax (note that the first markdown heading used within the callout is used as the callout heading):\n:::{.callout-note}\nNote that there are five types of callouts, including:\n`note`, `tip`, `warning`, `caution`, and `important`.\n:::\n\n:::{.callout-tip}\n## Tip With Caption\n\nThis is an example of a callout with a caption.\n:::\nSee our documentation on Callouts, to learn more, including more about how to customize the appearance and behavior of callouts."
  },
  {
    "objectID": "data/writings/posts/2022-10-25-shinylive-extension/index.html",
    "href": "data/writings/posts/2022-10-25-shinylive-extension/index.html",
    "title": "Shinylive Extension",
    "section": "",
    "text": "The new Shinylive Quarto extension makes it easy to embed Shiny for Python applications in your Quarto documents. This makes it possible to add interactivity to your documents with just Python code. For example, you can include an interactive Shiny application like this, directly inside your Quarto document.\n\n\n\n\n\nIn case you’re not already familiar with Shiny, here’s some background: Shiny is a framework for creating web applications. Shiny was originally just for R, but we’ve recently released an alpha version of Shiny for Python.\nOne of the exciting new features of Shiny for Python is a deployment method called Shinylive: the application can be run entirely within the browser, without needing a remote server running Python. Instead, Python runs in the web browser, thanks to the magic of WebAssembly. In essence, but the server and client sides of the Shiny application run in the browser.\nThe Shiny for Python website contains many interactive, editable Shiny applications, and is built using this extension.\nBear in mind that not all Shiny applications can be deployed with Shinylive, in part because not all Python packages can run in WebAssembly – but for those that can, this extension makes it possible to deploy the Quarto document with the embedded application on any web hosting service. To learn more about Shinylive, see this page.\nThe new Shinylive Quarto extension makes it easy to embed Shiny for Python applications in Quarto documents. This is a great way of adding interactive components to your Quarto document. And, once again, you don’t need a server running Python to share these Quarto documents – just deploy the generated files as you would for any other Quarto website."
  },
  {
    "objectID": "data/writings/posts/2023-12-07-quarto-dashboards-demo/index.html",
    "href": "data/writings/posts/2023-12-07-quarto-dashboards-demo/index.html",
    "title": "Quarto Dashboards Demonstration",
    "section": "",
    "text": "Quarto has a host of exciting new features in release v1.4 with one of the most anticipated being Quarto Dashboards. In a recent internal presentation, Charles Teague demonstrated the new capabilities and we wanted to share it with community.\nPlease note that you can use this feature today, but to access it you need to be running on a recent Quarto prerelease build. We also encourage users to review our pre-release documentation which offers additional information and examples of the dashboard functionality."
  },
  {
    "objectID": "data/writings/posts/2023-04-26-1.3-release/index.html",
    "href": "data/writings/posts/2023-04-26-1.3-release/index.html",
    "title": "Quarto 1.3",
    "section": "",
    "text": "We are happy to announce that Quarto 1.3 has been released. You can grab the current release from https://quarto.org/docs/download/.\nIf you are ever wondering which version of Quarto you are using, a quick way to check on the command line is:\nWe’ve previously blogged about some of the features of this release that we were most excited about, but let’s highlight them again."
  },
  {
    "objectID": "data/writings/posts/2023-04-26-1.3-release/index.html#code-annotation",
    "href": "data/writings/posts/2023-04-26-1.3-release/index.html#code-annotation",
    "title": "Quarto 1.3",
    "section": "Code Annotation",
    "text": "Code Annotation\nYou can now add line-based annotations to your code blocks using special code comments along with an ordered list. Code annotations work across many formats, and are interactive in HTML-based formats.\n\n\n\nCode Annotation in an HTML document\n\n\nTo learn more, check out the Code Annotation documentation."
  },
  {
    "objectID": "data/writings/posts/2023-04-26-1.3-release/index.html#multi-format-publishing",
    "href": "data/writings/posts/2023-04-26-1.3-release/index.html#multi-format-publishing",
    "title": "Quarto 1.3",
    "section": "Multi-format Publishing",
    "text": "Multi-format Publishing\nHTML pages (either standalone or in a website) now automatically include links to other formats specified in the document front matter. For example, the following document front matter:\ntitle: Sample Page\nauthor: Norah Jones\ndate: last-modified\ntoc: true\nformat: \n  html: default\n  ipynb: default\nResults in an HTML page that includes a link to the additional notebook format in the right margin below the table of contents:\n\n\n\nAn HTML document with a link to another format\n\n\nFind out more in the documentation on Including Other Formats."
  },
  {
    "objectID": "data/writings/posts/2023-04-26-1.3-release/index.html#jupyter-cell-embedding",
    "href": "data/writings/posts/2023-04-26-1.3-release/index.html#jupyter-cell-embedding",
    "title": "Quarto 1.3",
    "section": "Jupyter Cell Embedding",
    "text": "Jupyter Cell Embedding\nEasily include the output of an external Jupyter notebook in a Quarto document with the embed shortcode. Provide the path to a Jupyter Notebook and a cell identifier and the output will be included in your document along with a link back to the source Notebook.\n\n\n\nA plot embedded in a document from a Jupyter Notebook\n\n\nLearn more about the embed shortcode in Embedding Jupyter Notebook Cells in the docs."
  },
  {
    "objectID": "data/writings/posts/2023-04-26-1.3-release/index.html#confluence-publishing",
    "href": "data/writings/posts/2023-04-26-1.3-release/index.html#confluence-publishing",
    "title": "Quarto 1.3",
    "section": "Confluence Publishing",
    "text": "Confluence Publishing\nAtlassian Confluence is a publishing platform for supporting team collaboration. Quarto now provides support for publishing individual documents, as well as projects composed of multiple documents, into Confluence Spaces.\n\n\n\n\n\n\n\n\n\nA Quarto Project\n\n\n\n\n\n\n\nPublished to Confluence\n\n\n\n\n\nTo learn more, head to the documentation on Confluence Publishing."
  },
  {
    "objectID": "data/writings/posts/2023-04-26-1.3-release/index.html#other-highlights",
    "href": "data/writings/posts/2023-04-26-1.3-release/index.html#other-highlights",
    "title": "Quarto 1.3",
    "section": "Other Highlights",
    "text": "Other Highlights\nSome other notable highlights include:\n\nArticle Grid Customization—Customize the widths of layout components in HTML documents\nQuarto Book AsciiDoc Support—Output Quarto books to AsciiDoc files\nWebsite Navigation Improvements—Include tools in your navbar, and provide better navigation for Quarto websites on mobile devices\nMermaid Diagram Theming—Use your document theme, or built-in Mermaid themes, for your Mermaid diagrams\nPDF: SVG and Remote Images—Include SVG images and remote images in PDF documents\nkbd Shortcode—Show well-formatted keyboard shortcuts in Quarto documents.\n\nYou can find all the other changes in 1.3, in the Release Notes."
  },
  {
    "objectID": "data/writings/posts/2023-04-26-1.3-release/index.html#acknowledgements",
    "href": "data/writings/posts/2023-04-26-1.3-release/index.html#acknowledgements",
    "title": "Quarto 1.3",
    "section": "Acknowledgements",
    "text": "Acknowledgements\nWe’d like to say a huge thank you to everyone who contributed to this release by opening issues and pull requests:\nABohynDOE, aborruso, agerlach, aimundo, alperyilmaz, ameliaritger, anaveenan, andrewheiss, apreshill, apsteinmetz, arnaudgallou, aronatkins, arronlacey, ArturKlauser, astrowonk, ats, awehrfritz, b-rodrigues, baptiste, batpigandme, bayeslearner, benabel, BertTijhuis, boshek, brunomioto, busemorose, bvancil, bwelman, cboettig, cgoo4, ChoCho66, cicarrascog, coatless, code86, condwanaland, daniel-smit-haw, daranzolin, davidbudzynski, DavidD003, ddobrinskiy, dgkf, DhruvaSambrani, directknowledge, dkubek, dmalan, dmenne, drcaprosser, drscotthawley, edoson, eeholmes, eitsupi, elgabbas, EllaKaye, emmansh, ericvmai, espinielli, etiennebacher, EvoArt, fire, fortunewalla, freestatman, fuhrmanator, fulem, g-simmons, gadenbuie, GegznaV, ghost, giabaio, githubpsyche, GraceEMc, gregswinehart, GShotwell, guoruizhong, harrelfe, hemonika, henningsway, iandol, ijlyttle, iusgit, ivanek, jake-wittman, jakobarendt, jakub-jedrusiak, javajon, jcmkk3, jcolomb, jdutant, JeffreyRacine, jensschroer, jeremiahpslewis, jfbarthelemy, jhelvy, Jiayou-Chao, jimjam-slam, jkylearmstrong, jmbarbone, jmbuhr, jmcastagnetto, joelvonrotz, JoFrhwld, johannes4998, jrcuesta, jthomasmock, juba, justanothergithubber, KaiWaldrant, kalenkovich, kdheepak, kelly-sovacool, KittJonathan, kmasiello, knuesel, koehlerson, koushikkhan, lcnbr, leovan, linogaliana, m-legrand, m4jing, machow, maelle, malcolmbarrett, marierivers, MattF-NSIDC, mattsams89, mattwarkentin, maxdrohde, mccarthy-m-g, MHellmund, mikheyev, mine-cetinkaya-rundel, mksinicus, mrajeev08, nanxstats, NeubertJonas, nikcleju, njbart, patrickvdb, petrbouchal, philip-khor, philwunderlich, Pierre9344, pitmonticone, pmagwene, poldrack, pommevilla, psychelzh, ratnanil, ravimakhija, RaymondBalise, reuning, rexdouglass, rgaiacs, richardsprague, rjake, rleyvasal, rmcd1024, RobTour, rsenft1, runlevel0, sagikazarmark, salim-b, SamEdwardes, samperman, schochastics, ScientiaFelis, scottamain, scottfranz, sebastian-c, seeM, shafayetShafee, singuyenmai, sje30, snhansen, streepvaren, thedabs91, thomashallam, timothee-bacri, tomshafer, tomsutch, tomvaneyck, topepo, tverbeiren, TylerHillery, ucpresearch, verbalins, vfacta, vlyubchich, VMTdeJong, vpratz, white-c, wklimowicz, XiangyunHuang, Xitian9, xl0, xtimbeau, y9c, yevgenryeznik, zachcp, zkwabm"
  },
  {
    "objectID": "data/writings/posts/2023-03-20-confluence/index.html",
    "href": "data/writings/posts/2023-03-20-confluence/index.html",
    "title": "Confluence Publishing",
    "section": "",
    "text": "Quarto 1.3 Feature\n\n\n\nThis post is part of a series highlighting new features in the 1.3 release of Quarto. Get the latest release at https://quarto.org/docs/download.\n\n\nAtlassian Confluence is a publishing platform for supporting team collaboration. Confluence has a variety of hosting options which include both free and paid subscription plans.\nQuarto 1.3 adds support for publishing individual documents, as well as projects composed of multiple documents into Confluence Spaces.\n\n\n\n\n\n\n\n\n\nA Quarto Document\n\n\n\n\n\n\n\nPublished to Confluence\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA Quarto Project\n\n\n\n\n\n\n\nPublished to Confluence\n\n\n\n\n\nManaging Confluence content with Quarto allows you to author content in Markdown, manage that content with your usual version control tools like Git and GitHub, and leverage Quarto’s tools for including computational output.\n\nIf you’re curious about using Confluence Publishing for your own project, head to the Confluence Publishing page of the pre-release highlights to learn more."
  },
  {
    "objectID": "data/writings/posts/2023-12-05-asa-traveling-courses/index.html",
    "href": "data/writings/posts/2023-12-05-asa-traveling-courses/index.html",
    "title": "ASA Traveling Courses on Quarto",
    "section": "",
    "text": "In 2023, Dr. Andrew Bray and I gave a series of six workshops on Quarto as part of the Traveling Courses program sponsored by the American Statistical Association.\nThe workshop was designed for those who want to take their R Markdown skills and expertise and apply them in Quarto, the next generation of R Markdown. Participants learned how to apply their reproducible authoring skills to the Quarto format and about new tools and workflows for authoring with Quarto in RStudio. The workshop covered creating static documents and presentations, building websites, and writing blogs and books. Finally, participants learned various ways to deploy and publish their Quarto projects on the web.\nHome pages and links to source code for each of the six workshops are listed below:\n\n\n\n\n\n\n\nNebraska Chapter\nOmaha, Nebraska\nApril 28, 2023\nmine.quarto.pub/quarto-asa-nebraska\nSource\n\n\n\n\nOregon Chapter\nPortland, Oregon\nJune 10, 2023\nandrew.quarto.pub/oregon-asa\nSource\n\n\n\n\nAlaska Chapter\nAnchorage, Alaska\nJune 20, 2023\nandrew.quarto.pub/alaska-asa/\nSource\n\n\n\n\nOhio Chapter\nVirtual Workshop on Zoom\nAugust 18, 2023\nandrew.quarto.pub/ohio-as\nSource\n\n\n\n\nBoston Chapter\nVirtual Workshop on Zoom\nSeptember 20, 2023\nandrew.quarto.pub/boston-asa\nSource\n\n\n\n\nMid-Tennessee Chapter\nNashville, Tennessee\nOctober 20, 2023\nmine.quarto.pub/quarto-asa-nashville\nSource\n\n\n\n\n\nOne of the Quarto features we leveraged in organizing these materials is that you can publish to different QuartoPub URLs from the same repository with quarto publish. After each workshop, we created a release on GitHub to take a snapshot of the materials for that workshop, and for the subsequent workshop, we made edits to the materials on the main branch and published them to a new URL.\nThe source code for everything can be found at github.com/asa-quarto/website. Also in the GitHub organization is a repo containing the “your turn” exercises for the workshops: github.com/asa-quarto/exercises.\nAll materials are released with Creative Commons Attribution-ShareAlike 4.0 International license. If you are teaching a Quarto workshop, feel free to reuse any and all of these materials. And if you’re learning Quarto, you might find it helpful to follow along with any of the workshops listed above.\nHappy learning and happy teaching!"
  },
  {
    "objectID": "data/writings/posts/2023-05-15-get-started/index.html",
    "href": "data/writings/posts/2023-05-15-get-started/index.html",
    "title": "Get Started with Quarto",
    "section": "",
    "text": "Have you been hearing about Quarto but didn’t give it a try yet? Perused the Get Started pages but would like another intro? Or have about 20 minutes to spare and want to pick up a few Quarto tips? You’ve come to the right place!\n\nIn this video, I walk you through creating documents, presentations, and websites and publishing with Quarto. The video features authoring Quarto documents with executable R code chunks using the RStudio Visual Editor.\nSelect highlights include:\n\nInserting cross references to tables and figures\nAdding a citation from a DOI\nSeamlessly switching between output formats as well as creating multi-format documents\nCustomizing the output location of code in presentations\nCreating a website from scratch\nPublishing the website to QuartoPub\n\nIf you would like to follow along as you watch the video, you can find the source code for everything created in the video in this GitHub repository and the published website on QuartoPub."
  },
  {
    "objectID": "data/writings/posts/2024-01-24-1.4-release/index.html",
    "href": "data/writings/posts/2024-01-24-1.4-release/index.html",
    "title": "Quarto 1.4",
    "section": "",
    "text": "Quarto 1.4 has been officially released! You can get the current release from https://quarto.org/docs/download/.\nThis release has tons of new features. Some of the big ones we want to spotlight are: Dashboards, Typst, Inline Code Syntax, Cross-References and Manuscripts."
  },
  {
    "objectID": "data/writings/posts/2024-01-24-1.4-release/index.html#quarto-dashboards-streamline-the-creation-of-interactive-dashboards-giving-you-an-effortless-way",
    "href": "data/writings/posts/2024-01-24-1.4-release/index.html#quarto-dashboards-streamline-the-creation-of-interactive-dashboards-giving-you-an-effortless-way",
    "title": "Quarto 1.4",
    "section": "Quarto Dashboards streamline the creation of interactive dashboards, giving you an effortless way",
    "text": "Quarto Dashboards streamline the creation of interactive dashboards, giving you an effortless way\nQuarto Dashboards streamline the creation of interactive dashboards, giving you an effortless way to lay out interactive components, visualizations, tabular data, and annotations. Here are some examples (click on the image to visit the live version):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFor the source code of these dashboards and additional examples see the examples gallery. When you are ready to build your own Quarto dashboard head to our guide on Dashboards."
  },
  {
    "objectID": "data/writings/posts/2024-01-24-1.4-release/index.html#typst",
    "href": "data/writings/posts/2024-01-24-1.4-release/index.html#typst",
    "title": "Quarto 1.4",
    "section": "Typst",
    "text": "Typst\nTypst is a new open-source markup-based typesetting system that is designed to be as powerful as LaTeX while being much easier to learn and use. Typst creates beautiful PDF output with blazing fast render times.\nQuarto 1.4 includes the Typst CLI, so all you need to get started creating PDFs via Typst is to use format: typst:\n\n\nhello-typst.qmd\n\n---\ntitle: \"Hello Typst!\"\nformat: typst\n---\n\nMy first Typst document\n\nWe are particularly excited about how easy it is to make templates for journal articles, conference posters, newsletters and more with Typst. Here are some examples you can use in Quarto as custom formats:\n\n\n\n\n\n\n\n\n\nIEEE\n\n\n\n\n\n\n\nPoster\n\n\n\n\n\n\n\nLetter\n\n\n\n\n\n\n\nDept News\n\n\n\n\n\nStart your Typst journey with Quarto in our guide on Typst Basics."
  },
  {
    "objectID": "data/writings/posts/2024-01-24-1.4-release/index.html#inline-code-syntax",
    "href": "data/writings/posts/2024-01-24-1.4-release/index.html#inline-code-syntax",
    "title": "Quarto 1.4",
    "section": "Inline Code Syntax",
    "text": "Inline Code Syntax\nQuarto 1.4 introduces a unified syntax for including computed values inline. The syntax for inline code is similar to code blocks, except you use a single tick (`) rather than triple ticks (```), and you can use it in the middle of markdown:\n\n\n\n\n\n\nJupyter\n```{python}\nradius = 5\n```\n\nThe radius of the circle is `{python} radius`\nThis syntax works for any Jupyter kernel—so for Julia you would write an inline expression as `{julia} radius`).\n\n\nKnitr\n```{r}\nradius &lt;- 5\n```\n\nThe radius of the circle is `{r} radius`\n\n\nOJS\n```{ojs}\nradius = 5\n```\n\nThe radius of the circle is `{ojs} radius`\n\n\n\nAnd don’t worry if you are used to using `r ` that syntax remains fully supported. Read more at Inline Code."
  },
  {
    "objectID": "data/writings/posts/2024-01-24-1.4-release/index.html#cross-references",
    "href": "data/writings/posts/2024-01-24-1.4-release/index.html#cross-references",
    "title": "Quarto 1.4",
    "section": "Cross-References",
    "text": "Cross-References\nCross-references have been overhauled in Quarto 1.4, enabling you to do things like:\n\nFlexibly define the content of float cross-references (e.g. figures, tables and code listings) with the new Cross-Reference Div Syntax. For example, Table 1 is an image treated like a table:\n\n\n\n\n\n\n::: {#tbl-table}\n\n![](table.png)\n\nAn image treated like a table\n\n:::\n\n\n\n\n\nTable 1: An image treated like a table\n\n\n\n\n\n\n\n\n\nAnd notice if you hover over the reference as it appears in the text, e.g. hover over this link to Table 1, you’ll get a floating preview of the content—that’s new too.\nDefine custom types of float cross-reference, which you could use to create cross-references to Videos, Diagrams or Supplemental Figures.\nCross-reference executable code cells, callouts and remarks and solutions."
  },
  {
    "objectID": "data/writings/posts/2024-01-24-1.4-release/index.html#manuscripts",
    "href": "data/writings/posts/2024-01-24-1.4-release/index.html#manuscripts",
    "title": "Quarto 1.4",
    "section": "Manuscripts",
    "text": "Manuscripts\nQuarto manuscript projects provide a framework for writing and publishing scholarly articles. You can use notebooks (.qmd or .ipynb) as the source of content and computations, and then publish these computations alongside the manuscript, allowing readers to dive into your code.\nThe output of a manuscript project is a website containing the article in multiple formats (e.g. LaTeX, MS Word) along with rendered versions of the notebooks in the project:\n\n\n\n\n\n\n\n\n\nArticle Content\n\n\n\n\n\n\n\nNavigation\n\n\n\n\n\nRead more about manuscripts and how to get started in our guide to Manuscripts."
  },
  {
    "objectID": "data/writings/posts/2024-01-24-1.4-release/index.html#other-highlights",
    "href": "data/writings/posts/2024-01-24-1.4-release/index.html#other-highlights",
    "title": "Quarto 1.4",
    "section": "Other Highlights",
    "text": "Other Highlights\nSome other highlights include:\n\nShiny for Python—Support for using Shiny for Python within Quarto documents.\nScript Rendering—Render specially formatted .py, .jl and .r script files.\nEasy Binder Configuration for Quarto Projects—Support for generating files required to deploy a Quarto project to Binder.\nConnect Email Generation—Extends the html output format so that HTML/text emails can be created and selectively delivered through Posit Connect.\nPublish to Posit Cloud—Adds posit-cloud as a venue for quarto publish.\nLightbox Treatment for Images and Figures—Support for zooming into images and figures as well as grouping multiple images into a gallery.\n\nIf you build Quarto extensions, you should also be aware of some developer-facing changes:\n\nLua changes—New Support for crossreferenceable elements in filters, extensible renderers of quarto AST nodes such as FloatRefTarget and Callout, the use of relative paths in require() calls, and more precise specification of where a filter will be inserted.\nAST processing changes—Improvements to the HTML table processing added in v1.3 and a way for LaTeX raw blocks to include Quarto-compatible markdown for processing.\n\nYou can find all the other changes in 1.4 in the Release Notes."
  },
  {
    "objectID": "data/writings/posts/2024-01-24-1.4-release/index.html#acknowledgements",
    "href": "data/writings/posts/2024-01-24-1.4-release/index.html#acknowledgements",
    "title": "Quarto 1.4",
    "section": "Acknowledgements",
    "text": "Acknowledgements\nWe’d like to say a huge thank you to everyone who contributed to this release by opening issues and pull requests:\nAaronGullickson, abichat, abigailhaddad, aborruso, abraver, acebulsk, aghaynes, ajay333a, ajsmit, ALanguillaume, AlbertRapp, aletroux, alex-vinogradov, alexCardazzi, allefeld, am-lh, andlekbra, andrefmello91, AndreiBiziuk, andrewheiss, anielsen001, apsteinmetz, AQLT, arnaudgallou, aronatkins, atsyplenkov, b-rodrigues, Balaika, baptiste, barryrowlingson, batpigandme, bcongelio, benabel, benjaminschlegel, bfordAIMS, blacksqr, boshek, BradyAJohnston, brtarran, bryanhanson, bweatherson, c-zippel, cadojo, camilogarciabotero, cbrnr, ccamara, cermak-consulting, chendaniely, ChrisJefferson, ChristopherBarrington, christopherkenny, chrisvoncsefalvay, chuxinyuan, cjber, coatless, coltongearhart, CorradoLanera, csgroen, dalejbarr, DamonCharlesRoberts, Damonsoul, daniel-smit-haw, danieltomasz, danmackinlay, daranzolin, darthlite, das-g, davidfoxcroft, davidpomerenke, ddotta, declann, dense-set, dfolio, dgkf, dkapitan, dlakelan, dloss, dmkaplan2000, DOSull, dpabon, dpprdan, DriesSchaumont, drscotthawley, dschief001, dweng0, e-miz, EconomiCurtis, edavidaja, edibotopic, eeenilsson, ehudkr, eitsupi, EllaKaye, emdelponte, emilBeBri, EmilHvitfeldt, emitanaka, epruesse, ercbk, EricJC24, ericvmai, erikerhardt, espinielli, Eugloh, fecet, Felixmil, FeralFlora, finkelshtein, fkohrt, fradav, fuhrmanator, fulem, gadenbuie, garrettgman, GegznaV, Gewerd-Strauss, gimmiereddy, gl-eb, grantmcdermott, gregmacfarlane, gregoireurvoy, gregswinehart, gshotwell, GuillaumeDehaene, gvelasq, gyansinha, hamelsmu, harrelfe, harrylojames, harrysw1729, HelenaLC, helmingstay, HenrikBengtsson, homerhanumat, icarusz, ig0101, ijlyttle, ijmitch, irmoodie, isabelizimm, IULibScholComm, ivelasq, jack-davison, Janidai, jarbet, jasonaris, jatalah, JauntyJJS, jb-leger, jcheng5, jdonland, jdutant, jeremy9959, jeroenjanssens, jfb-h, jfunction, JGobeil, jgomezdans, jgostick, jhchou, jhk0530, jhunter-aof, jimgar, jimjam-slam, jmbuhr, jmcvw, Joda66, joelostblom, joelvonrotz, johngoldin, jonassmedegaard, jpatteet, jrowen, jthomasmock, jtr13, juba, juliantao, jurjoroa, justanothergithubber, jzelner, KaiWaldrant, kbvernon, kcarnold, kdheepak, kdzhang, kejaed, kendonB, knuesel, Kodiologist, kompre, koushikkhan, krishaamer, ksreyes, kwangkim, kyleGrealis, lcnbr, leeroyaus, leonardblaschek, Lextuga007, lidavidm, lillemets, lnnrtwttkhn, luifrancgom, Lulliter, lyndondrake, m-clark, m-guggenmos, machow, maelle, magnusnosnes, MarieEtienne, marklhc, martinfleis, Martinomagnifico, masud90, matanhakim, Matoyatapika, matthew-brett, matthewfinkbeiner, maxdrohde, mfenner, mfisher87, MichaelPascale, mikabr, milanmlft, mine-cetinkaya-rundel, Minh-AnhHuynh, miwojc, mloubout, msarahan, msh855, mslynch, murattasdemir, mvanaman, nanxstats, netique, netw0rkf10w, nickriches, njbart, noahmf, nqt2022, nwisn, nwvhb, OlexiyPukhov, olivroy, ollyhensby, pastorn, pat-s, patgd, petrbouchal, petzi53, phongphuhanam, pieterprovoost, piotr-kaczmarski, pjastr, pommevilla, prosoitos, ptram, qiushiyan, ratnanil, ravicodelabs, rcannood, rchaput, regob, remlapmot, resmartiZH, rgaiacs, rmcd1024, rmflight, rnd195, robolyst, rogerbramon, ronblum, ropeladder, rowanc1, RoyiAvital, rsenft1, salim-b, samcarter, sceptri, sda030, sebacea, sebastian-c, sebastianrowan, sebffischer, seeM, Serenade600, Servinjesus1, shafayetShafee, sharon-wang, shirdekel, simonjackman, sje30, sjspielman, skaltman, smithbn, snhansen, Sparrow0hawk, sswam, stefanbringuier, stephan-koenig, steveguil, Sumidu, sun123zxy, tegorman13, tflexs, th0ger, the-solipsist, TheGoodCartman, TheisFerre, thomascwells, TLouf, tobydriscoll, tom67, tonyaseverson, topepo, tpoisot, TrainedMusician, TS-CUBED, ttalVlatt, Tutuchan, tylermorganwall, ulyngs, ute, vfacta, vitpetrik, VivaldoMendes, VladimirAlexiev, Walser52, warrickball, wch, weihuangwong, wilcar, willingc, wjdenny, wklimowicz, XiangyunHuang, xtimbeau, yoyo25, YuanchenZhu2020, yuxi-liu-wired, yyzeng, zenggyu, Zeno-of-Elea, zief0002, Zuline\nThe party popper emoji in the listing and social card image for this post comes from OpenMoji– the open-source emoji and icon project. License: CC BY-SA 4.0\n\n\n\nIEEE\nPoster\nLetter\nDept News"
  },
  {
    "objectID": "data/writings/posts/2023-03-17-jupyter-cell-embedding/index.html",
    "href": "data/writings/posts/2023-03-17-jupyter-cell-embedding/index.html",
    "title": "Jupyter Notebook Cell Embedding",
    "section": "",
    "text": "Quarto 1.3 Feature\n\n\n\nThis post is part of a series highlighting new features in the 1.3 release of Quarto. Get the latest release at https://quarto.org/docs/download.\n\n\nStarting in Quarto 1.3, you can include the output of an external Jupyter notebook in a Quarto document with the embed shortcode. To embed a notebook cell, provide the path to a Jupyter Notebook and a cell identifier. For example, this notebook called penguins.ipynb has a cell labelled fig-bill-scatter:\n\nYou can use the following shortcode to embed the output of this cell:\n{{&lt; embed penguins.ipynb#fig-bill-scatter &gt;}}\nThis will embed the plot as follows:\n\n\n\n\n\n\n\n\n\n\nFigure 1: A scatterplot of bill dimensions for penguins, made with Altair.\n\n\n\n\nSource: Palmer Penguins\nA link to the source notebook is automatically provided beneath the plot. Following the link takes users to a rendered version of the notebook, allowing them to explore the notebook without having to download and run it locally. For example, clicking on the link to penguins.ipynb gets you to a page that looks like the following:\n\nBeyond this basic usage, head to the Jupyter Cell Embedding highlight docs to learn how to:\n\nSpecify cells in multiple ways, see Specifying Cells.\nControl the output using code cell options in the source Notebook, including things like figure captions, figure layout, and code display, see Code Cell Options.\nInclude the cell code along with the output by adding an echo option to the shortcode, see Embedding Code.\nCustomize or exclude the link to the source notebook, see Links to Source Notebooks."
  },
  {
    "objectID": "data/writings/posts/2022-07-25-feature-extensions/index.html",
    "href": "data/writings/posts/2022-07-25-feature-extensions/index.html",
    "title": "Quarto Extensions",
    "section": "",
    "text": "Quarto Extensions are a powerful way to modify or extend the behavior of Quarto, and can be created and distributed by anyone. There are three types of extensions available:\n\nShortcodes are special markdown directives that generate various types of content. For example, you could create shortcodes to embed tweets or videos in a document.\nFilters are a flexible and powerful tool for introducing new global behaviors and/or new markdown rendering behaviors. For example, you could create filters to implement output folding, an image carousel, or just about anything you can imagine!\nFormats enable you to create new output formats by bundling together document options, templates, stylesheets, and other content.\n\nHere are some examples of extensions developed and maintained by the core Quarto team:\n\n\n\n\n\n\n\nExtension\nDescription\n\n\n\n\nlightbox\nCreate lightbox treatments for images in your HTML documents.\n\n\nfancy-text\nOutput nicely formatted versions of fancy strings such as LaTeX and BibTeX in multiple formats.\n\n\nfontawesome\nUse Font Awesome icons in HTML and PDF documents.\n\n\nlatex-environment\nQuarto extension to output custom LaTeX environments.\n\n\n\nTo learn more about using extensions, see the Extensions documentation on the Quarto website. If you want to dive in to creating your own extensions check out the articles on Creating Shortcodes, Creating Filters, and Creating Formats."
  },
  {
    "objectID": "data/writings/posts/2022-02-17-advanced-layout/index.html",
    "href": "data/writings/posts/2022-02-17-advanced-layout/index.html",
    "title": "Positioning Content in the Margin",
    "section": "",
    "text": "Quarto supports a variety of page layout options that enable you to author content that\nThis post will demonstrate a few of the capabilities for positioning content in the margin of the page. You can read more about the complete capabilities in the the Article Layout Guide."
  },
  {
    "objectID": "data/writings/posts/2022-02-17-advanced-layout/index.html#margin-figures",
    "href": "data/writings/posts/2022-02-17-advanced-layout/index.html#margin-figures",
    "title": "Positioning Content in the Margin",
    "section": "Margin Figures",
    "text": "Margin Figures\nFigures that you create using code cells can be placed in the margin by using the column: margin code cell option. If the code produces more than one figure, each of the figures will be placed in the margin.\n\n```{r}\n#| label: fig-mtcars\n#| fig-cap: \"MPG vs horsepower, colored by transmission.\"\n#| column: margin\n\nlibrary(ggplot2)\nmtcars2 &lt;- mtcars\nmtcars2$am &lt;- factor(\n  mtcars$am, labels = c('automatic', 'manual')\n)\nggplot(mtcars2, aes(hp, mpg, color = am)) +\n  geom_point() +\n  geom_smooth(formula = y ~ x, method = \"loess\") +\n  theme(legend.position = 'bottom')\n```\n\n\n\n\n\n\n\n\nFigure 1: MPG vs horsepower, colored by transmission."
  },
  {
    "objectID": "data/writings/posts/2022-02-17-advanced-layout/index.html#margin-tables",
    "href": "data/writings/posts/2022-02-17-advanced-layout/index.html#margin-tables",
    "title": "Positioning Content in the Margin",
    "section": "Margin Tables",
    "text": "Margin Tables\nYou an also place tables in the margin of your document by specifying column: margin.\n\n```{r}\n#| column: margin\n\nknitr::kable(\n  mtcars[1:3, 1:3]\n)\n```\n\n\n\n\n\n\nmpg\ncyl\ndisp\n\n\n\n\nMazda RX4\n21.0\n6\n160\n\n\nMazda RX4 Wag\n21.0\n6\n160\n\n\nDatsun 710\n22.8\n4\n108"
  },
  {
    "objectID": "data/writings/posts/2022-02-17-advanced-layout/index.html#other-content",
    "href": "data/writings/posts/2022-02-17-advanced-layout/index.html#other-content",
    "title": "Positioning Content in the Margin",
    "section": "Other Content",
    "text": "Other Content\nYou can also place content in the margin by targeting the margin column using a div with the .column-margin class. For example:\n::: {.column-margin}\nWe know from *the first fundamental theorem of calculus* that for $x$ in $[a, b]$:\n\n$$\\frac{d}{dx}\\left( \\int_{a}^{x} f(u)\\,du\\right)=f(x).$$\n:::\n\n\nWe know from the first fundamental theorem of calculus that for \\(x\\) in \\([a, b]\\):\n\\[\\frac{d}{dx}\\left( \\int_{a}^{x} f(u)\\,du\\right)=f(x).\\]"
  },
  {
    "objectID": "data/writings/posts/2022-02-17-advanced-layout/index.html#margin-references",
    "href": "data/writings/posts/2022-02-17-advanced-layout/index.html#margin-references",
    "title": "Positioning Content in the Margin",
    "section": "Margin References",
    "text": "Margin References\nFootnotes and the bibliography typically appear at the end of the document, but you can choose to have them placed in the margin by setting the following option[^1] in the document front matter:\n---\nreference-location: margin\ncitation-location: margin\n---\nWith these options set, footnotes and citations will (respectively) be automatically be placed in the margin of the document rather than the bottom of the page. As an example, when I cite @xie2018, the citation bibliography entry itself will now appear in the margin.\n\nAsides\nAsides allow you to place content aside from the content it is placed in. Asides look like footnotes, but do not include the footnote mark (the superscript number). This is a span that has the class aside which places it in the margin without a footnote number.\n[This is a span that has the class aside which places it in the margin without a footnote number.]{.aside}"
  },
  {
    "objectID": "data/writings/posts/2022-02-17-advanced-layout/index.html#margin-captions",
    "href": "data/writings/posts/2022-02-17-advanced-layout/index.html#margin-captions",
    "title": "Positioning Content in the Margin",
    "section": "Margin Captions",
    "text": "Margin Captions\nFor figures and tables, you may leave the content in the body of the document while placing the caption in the margin of the document. Using cap-location: margin in a code cell or document front matter to control this. For example:\n\n```{r}\n#| label: fig-cap-margin\n#| fig-cap: \"MPG vs horsepower, colored by transmission.\"\n#| cap-location: margin\n\nlibrary(ggplot2)\nmtcars2 &lt;- mtcars\nmtcars2$am &lt;- factor(\n  mtcars$am, labels = c('automatic', 'manual')\n)\nggplot(mtcars2, aes(hp, mpg, color = am)) +\n  geom_point() +\n  geom_smooth(formula = y ~ x, method = \"loess\") +\n  theme(legend.position = 'bottom')\n```\n\n\n\n\n\n\n\nFigure 2: MPG vs horsepower, colored by transmission."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  }
]